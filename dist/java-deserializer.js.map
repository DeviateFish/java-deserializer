{"version":3,"sources":["src/java-deserializer.js"],"names":[],"mappings":"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","file":"src/java-deserializer.js","sourcesContent":["import StreamReader from './stream-reader';\n\n// Magic numbers\nconst STREAM_MAGIC = 0xaced;\nconst STREAM_VERSION = 0x0005;\n\n// Type constants (ignore because undef)\nconst TC_NULL = 0x70;\nconst TC_REFERENCE = 0x71;\nconst TC_CLASSDESC = 0x72;\nconst TC_OBJECT = 0x73; // jshint ignore:line\nconst TC_STRING = 0x74;\nconst TC_ARRAY = 0x75;\nconst TC_CLASS = 0x76; // jshint ignore:line\nconst TC_BLOCKDATA = 0x77;\nconst TC_ENDBLOCKDATA = 0x78;\nconst TC_RESET = 0x79; // jshint ignore:line\nconst TC_BLOCKDATALONG = 0x7A; // jshint ignore:line\nconst TC_EXCEPTION = 0x7B; // jshint ignore:line\nconst TC_LONGSTRING = 0x7C; // jshint ignore:line\nconst TC_PROXYCLASSDESC = 0x7D; // jshint ignore:line\nconst TC_ENUM = 0x7E; // jshint ignore:line\n\nconst BASE_HANDLE = 0x7E0000;\n\nclass JavaDeserializer {\n\n  constructor(arraybuf) {\n    this.buffer = arraybuf;\n    this.stream = new StreamReader(arraybuf);\n    this.repr = null;\n    this.refs = [];\n    this._checkMagic();\n  }\n\n  _checkMagic() {\n    if (this.stream.readUint16() !== STREAM_MAGIC)\n    {\n      throw 'invalid magic number!';\n    }\n    if (this.stream.readUint16() !== STREAM_VERSION)\n    {\n      throw 'invalid version!';\n    }\n  }\n\n  _readClassDescription() {\n    var primitives = 'BCDFIJSZ';\n    var type = this.stream.readUint8();\n    var description = {};\n    if (type === TC_NULL)\n    {\n      return;\n    }\n    else if (type === TC_REFERENCE)\n    {\n      var handle = this.stream.readUint32() - BASE_HANDLE;\n      description = this.refs[handle];\n      return;\n    }\n    else if (type !== TC_CLASSDESC)\n    {\n      console.log('I don\\'t know how to handle this type yet: ' + type); // jshint ignore:line\n      return;\n    }\n    description.name = this.stream.readUtf8String();\n    description.versionId = [this.stream.readUint32(), this.stream.readUint32()];\n    description.handle = this.refs.length;\n    description.flags = this.stream.readUint8();\n    var fields = [];\n    var num = this.stream.readUint16();\n    for (var i = 0; i < num; i++)\n    {\n      var field = {};\n      field.type = this.stream.readUint8();\n      field.name = this.stream.readUtf8String();\n      if (primitives.indexOf(String.fromCharCode(field.type)) === -1)\n      {\n        // not a primitive, what do.\n        console.log('this is not a primitive type: ' + field.type); // jshint ignore:line\n      }\n      fields.push(field);\n    }\n    description.fields = fields;\n    description.annotation = this.stream.readUint8();\n    if (description.annotation !== TC_ENDBLOCKDATA)\n    {\n      console.log('I don\\'t know what to do with this: ' + description.annotation); // jshint ignore:line\n    }\n    description.superClass = this._readClassDescription();\n    this.refs.push(description);\n    return description;\n  }\n\n  _readArray() {\n    var content = {};\n    var desc = this._readClassDescription(), i, length;\n    content.description = desc;\n    // for some reason this doesn't seem to be getting this.\n    content.handle = this.refs.length;\n    length = this.stream.readUint32();\n    var name = desc.name;\n    // haha what the fuck is this shit.\n    // Spec, does you follow it?\n    if (name === '[F')\n    {\n      content.elements = this.stream.readFloat32Array(length);\n    }\n    else if (name === '[S')\n    {\n      content.elements = this.stream.readUint16Array(length);\n    }\n    else // this is an array of classes of some kind?\n    {\n      content.elements = [];\n      for (i = 0; i < length; i++)\n      {\n        var t = this._readChunk();\n        content.elements.push(t);\n      }\n    }\n    // nope.avi\n    this.refs.push(content);\n    return content;\n  }\n\n  _readBlockData() {\n    var length = this.stream.readUint8();\n    return this.stream.readUint8Array(length);\n  }\n\n  _readChunk() {\n    var type = this.stream.readUint8();\n    var content = null;\n    switch (type)\n    {\n      case TC_ARRAY:\n        content = this._readArray();\n        break;\n      case TC_BLOCKDATA:\n        content = this._readBlockData();\n        break;\n      case TC_STRING:\n        content = this.stream.readUtf8String();\n        break;\n      default:\n        console.log('unhandled type'); // jshint ignore:line\n    }\n    return content;\n  }\n\n  getContents() {\n    if(this.repr) {\n      return this.repr;\n    }\n\n    this.repr = [];\n\n    while (this.stream.getPosition() < this.stream.getLength())\n    {\n      this.repr.push(this._readChunk());\n    }\n\n    return this.repr;\n  }\n}\n\nJavaDeserializer.VERSION = '0.2.0';\n\nexport default JavaDeserializer;\n\n/*var JavaDeserializer = (function()\n{\n  var Inherits = function (a, b)\n  {\n    var c = function ()\n    {\n    };\n    c.prototype = b.prototype;\n    a.superClass_ = b.prototype;\n    a.prototype = new c;\n    a.prototype.constructor = a\n  };\n\n  if (!ArrayBuffer.prototype.slice)\n  {\n    ArrayBuffer.prototype.slice = function (start, end)\n    {\n      var that = new Uint8Array(this);\n      if (end == undefined) end = that.length;\n      var result = new ArrayBuffer(end - start);\n      var resultArray = new Uint8Array(result);\n      for (var i = 0; i < resultArray.length; i++)\n        resultArray[i] = that[i + start];\n      return result;\n    };\n  }\n\n  var STREAM_MAGIC = 0xaced,\n    STREAM_VERSION = 0x0005,\n    TC_NULL = 0x70,\n    TC_REFERENCE = 0x71,\n    TC_CLASSDESC = 0x72,\n    TC_OBJECT = 0x73,\n    TC_STRING = 0x74,\n    TC_ARRAY = 0x75,\n    TC_CLASS = 0x76,\n    TC_BLOCKDATA = 0x77,\n    TC_ENDBLOCKDATA = 0x78,\n    TC_RESET = 0x79,\n    TC_BLOCKDATALONG = 0x7A,\n    TC_EXCEPTION = 0x7B,\n    TC_LONGSTRING = 0x7C,\n    TC_PROXYCLASSDESC = 0x7D,\n    TC_ENUM = 0x7E,\n    baseWireHandle = 0x7E0000,\n    SC_WRITE_METHOD = 0x01,\n    SC_BLOCK_DATA = 0x08,\n    SC_SERIALIZABLE = 0x02,\n    SC_EXTERNALIZABLE = 0x04,\n    SC_ENUM = 0x10;\n\n  // need to properly namespace this thing\n  // I would think this would break when attempting to deserialize multiple\n  // objects.\n  var previousDesc = [];\n\n  var classDesc = function (dataview, offset)\n  {\n    var primitives = 'BCDFIJSZ';\n    StreamChunk.call(this, dataview, offset, 'classDesc');\n    var type = this.readUint8();\n    if (type === TC_NULL)\n    {\n      return;\n    }\n    else if (type === TC_REFERENCE)\n    {\n      var handle = this.readUint32() - baseWireHandle;\n      this.contents = previousDesc[handle].contents;\n      return;\n    }\n    else if (type !== TC_CLASSDESC)\n    {\n      console.log('I don\\'t know how to handle this type yet: ' + type);\n      return;\n    }\n    var name = new utfStr(this.dataview, this.currentOffset);\n    this.currentOffset += name.getLength();\n    this.contents.name = name;\n    this.contents.versionId = [this.readUint32(), this.readUint32()];\n    this.contents.handle = previousDesc.length;\n    this.contents.flags = this.readUint8();\n    var fields = [];\n    var num = this.readUint16();\n    for (var i = 0; i < num; i++)\n    {\n      var field = {};\n      field.type = this.readUint8();\n      field.name = new utfStr(this.dataview, this.currentOffset);\n      this.currentOffset += field.name.getLength();\n      if (primitives.indexOf(String.fromCharCode(field.type)) === -1)\n      {\n        // not a primitive, what do.\n        console.log('this is not a primitive type: ' + field.type);\n      }\n      fields.push(field);\n    }\n    this.contents.fields = fields;\n    this.contents.annotation = this.readUint8();\n    if (this.contents.annotation !== TC_ENDBLOCKDATA)\n    {\n      console.log('I don\\'t know what to do with this: ' + this.contents.annotation);\n    }\n    this.contents.superClass = new classDesc(this.dataview, this.currentOffset);\n    this.currentOffset += this.contents.superClass.getLength();\n    previousDesc.push(this);\n  };\n  Inherits(classDesc, StreamChunk);\n\n  classDesc.prototype.getSize = function ()\n  {\n    // we don't really handle this yet.\n    return 4;\n  };\n\n  var jArray = function (dataview, offset)\n  {\n    StreamChunk.call(this, dataview, offset, 'jArray');\n    var desc = new classDesc(dataview, this.currentOffset), i;\n    this.contents.description = desc;\n    this.currentOffset += desc.getLength();\n    // for some reason this doesn't seem to be getting this.\n    this.contents.handle = previousDesc.length;\n    this.contents.size = this.readUint32();\n    this.contents.elements = [];\n    var name = desc.contents.name && desc.contents.name.contents.str;\n    // haha what the fuck is this shit.\n    // Spec, does you follow it?\n    if (name === '[F')\n    {\n      this.contents.elements = new Float32Array(this.contents.size);\n      for (i = 0; i < this.contents.size; i++)\n      {\n        this.contents.elements[i] = this.readFloat32();\n      }\n    }\n    else if (name === '[S')\n    {\n      this.contents.elements = new Uint16Array(this.contents.size);\n      for (i = 0; i < this.contents.size; i++)\n      {\n        this.contents.elements[i] = this.readInt16();\n      }\n    }\n    else\n    {\n      this.contents.elements = [];\n      for (i = 0; i < this.contents.size; i++)\n      {\n        var t = new Contents(this.dataview, this.currentOffset);\n        this.currentOffset += t.getLength();\n        this.contents.elements.push(t);\n      }\n    }\n    // nope.avi\n    previousDesc.push(this);\n  };\n  Inherits(jArray, StreamChunk);\n\n  jArray.prototype.toArray = function ()\n  {\n    return this.contents && this.contents.elements || null;\n  };\n\n  var blockData = function (dataview, offset)\n  {\n    StreamChunk.call(this, dataview, offset, 'blockData');\n    var size = this.readUint8();\n    var blocks = new ArrayBuffer(size);\n    var t = new Uint8Array(blocks);\n    for (var i = 0; i < size; i++)\n    {\n      t[i] = this.readUint8();\n    }\n    this.contents.size = size;\n    this.contents.blocks = blocks;\n  };\n  Inherits(blockData, StreamChunk);\n\n  blockData.prototype.toArray = function ()\n  {\n    return this.contents && this.contents.blocks || null;\n  };\n\n  var Contents = function (dataview, offset)\n  {\n    StreamChunk.call(this, dataview, offset, 'Contents');\n    var type = this.readUint8();\n    var content = null;\n    switch (type)\n    {\n      case TC_ARRAY:\n        content = new jArray(this.dataview, this.currentOffset);\n        break;\n      case TC_BLOCKDATA:\n        content = new blockData(this.dataview, this.currentOffset);\n        break;\n      case TC_STRING:\n        content = new utfStr(this.dataview, this.currentOffset);\n        break;\n      default:\n        console.log('unhandled type');\n    }\n    if (content)\n    {\n      this.currentOffset += content.getLength();\n    }\n    this.contents = content;\n    this.type = type;\n  };\n  Inherits(Contents, StreamChunk);\n\n  var Stream = function (dataview)\n  {\n    StreamChunk.call(this, dataview, 0, 'Stream');\n    if (this.readUint16() !== STREAM_MAGIC)\n    {\n      throw 'invalid magic number!';\n    }\n    if (this.readUint16() !== STREAM_VERSION)\n    {\n      throw 'invalid version!';\n    }\n    this.contents = null;\n  };\n  Inherits(Stream, StreamChunk);\n\n  Stream.prototype.getContents = function ()\n  {\n    if (!this.contents)\n    {\n      this.contents = [];\n      while (this.currentOffset < this.dataview.byteLength)\n      {\n        var contents = new Contents(this.dataview, this.currentOffset);\n        this.currentOffset += contents.getLength();\n        this.contents.push(contents);\n      }\n    }\n    return this.contents;\n  };\n\n  // I don't quite know what the purpose of this last wrapper is:\n  var JavaDeserializer = function (arraybuf)\n  {\n    this.buf = arraybuf;\n  };\n\n  JavaDeserializer.prototype.getStream = function ()\n  {\n    return new Stream(new DataView(this.buf, 0));\n  };\n\n  return JavaDeserializer;\n}());\n\nJavaDeserializer.VERSION = '0.1.0';\nroot.JavaDeserializer = JavaDeserializer;*/\n"]}